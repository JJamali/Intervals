version: '3.7'

services:

  reverse_proxy:
    container_name: intervals-nginx
    build: ./nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./backend/django_static:/django_static
    ports:
      - 80:80
    depends_on:
      - intervals-django
      - intervals-react

  # django backend
  intervals-django:
    tty: true
    container_name: intervals-django
    environment:
      HOST_LOCATION: "host.docker.internal"
    build: ./backend
    command: bash -c "python manage.py collectstatic --noinput && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend:/backend
      - ./backend/django_static:/django_static
    expose:
      - 8000
    depends_on:
      - db
      - redis

  # react frontend
  intervals-react:
    tty: true
    container_name: intervals-react
    # Enables hot-reloading
    environment:
      CHOKIDAR_USEPOLLING: "true"
    build: ./frontend
    command: npm start
    volumes:
      - ./frontend:/code
    expose:
      - 3000
    image: no-react

  redis:
    image: redis:alpine
  celery:
    build: ./backend
    command: celery -A intervals worker -l info
    volumes:
      - ./backend/:/usr/src/app/
    environment:
      - DEBUG=1
      - SECRET_KEY=dbaa1_i7%*3r9-=z-+_mz4r-!qeed@(-a_r(g@k8jo8y3r27%m
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
    depends_on:
      - redis
  celery-beat:
    build: ./backend
    command: celery -A intervals beat -l info
    volumes:
      - ./backend/:/usr/src/app/
    environment:
      - DEBUG=1
      - SECRET_KEY=dbaa1_i7%*3r9-=z-+_mz4r-!qeed@(-a_r(g@k8jo8y3r27%m
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
    depends_on:
      - redis

  db:
    image: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
